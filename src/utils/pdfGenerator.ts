
import { jsPDF } from "jspdf";
import "jspdf-autotable";

declare module "jspdf" {
  interface jsPDF {
    autoTable: (options: any) => jsPDF;
  }
}

type ServiceCardData = {
  id: string;
  title: string;
  description: string;
  earnings: string;
};

export const generatePropertyReportPDF = (
  propertyAddress: string,
  totalEarnings: number,
  services: ServiceCardData[],
  userName?: string
): Blob => {
  const doc = new jsPDF();
  const pageWidth = doc.internal.pageSize.getWidth();
  
  // Add header with logo
  doc.setFillColor(74, 47, 158); // Purple header
  doc.rect(0, 0, pageWidth, 30, "F");
  
  // Add title
  doc.setTextColor(255, 255, 255);
  doc.setFontSize(22);
  doc.setFont("helvetica", "bold");
  doc.text("TipTop Property Report", 15, 20);
  
  // Add date
  const today = new Date().toLocaleDateString();
  doc.setFontSize(10);
  doc.setFont("helvetica", "normal");
  doc.text(`Generated on: ${today}`, pageWidth - 60, 20);
  
  // Add user and property info
  doc.setTextColor(0, 0, 0);
  doc.setFontSize(14);
  doc.text("Property Monetization Summary", 15, 40);
  
  doc.setFontSize(12);
  if (userName) {
    doc.text(`Prepared for: ${userName}`, 15, 50);
  }
  doc.text(`Property Address: ${propertyAddress}`, 15, 60);
  
  // Add total earnings
  doc.setFont("helvetica", "bold");
  doc.text("Estimated Monthly Earnings:", 15, 75);
  doc.setTextColor(74, 47, 158);
  doc.setFontSize(16);
  doc.text(`$${totalEarnings}/month`, 95, 75);
  
  // Add recommendations section
  doc.setTextColor(0, 0, 0);
  doc.setFontSize(14);
  doc.text("Recommended Monetization Opportunities", 15, 90);
  
  // Add service recommendations
  if (services.length > 0) {
    const tableData = services.map(service => [
      service.title,
      service.description,
      service.earnings
    ]);
    
    doc.autoTable({
      startY: 95,
      head: [["Service", "Description", "Potential Earnings"]],
      body: tableData,
      headStyles: {
        fillColor: [74, 47, 158],
        textColor: [255, 255, 255],
        fontStyle: 'bold'
      },
      alternateRowStyles: {
        fillColor: [240, 240, 250]
      },
      styles: {
        cellPadding: 5
      }
    });
  } else {
    doc.setFontSize(12);
    doc.text("No specific opportunities identified at this time.", 15, 100);
  }
  
  // Add footer
  const finalY = doc.lastAutoTable ? doc.lastAutoTable.finalY + 20 : 120;
  doc.setFontSize(10);
  doc.setTextColor(100, 100, 100);
  doc.text("This report was generated by TipTop. Visit our website for more information.", 15, finalY);
  doc.text("www.tiptop-properties.com", 15, finalY + 5);
  
  // Return the PDF as a blob
  return doc.output('blob');
};
